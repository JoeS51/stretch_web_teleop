<launch>
  
  <!-- REALSENSE D435i -->
  <include file="$(find stretch_core)/launch/d435i_low_resolution.launch"></include>
  <!-- <include file="$(find stretch_teleop_interface)/launch/d435i.launch"></include> -->
  <!-- -->

  <!-- Start a nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/camera/depth/color/points" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.01
      filter_limit_max: 1.5
      filter_limit_negative: False
      leaf_size: 0.005
    </rosparam>
  </node>

  <arg name="params" value="$(find stretch_teleop_interface)/nodes/configure_video_streams_params.yaml"/>
  <arg name="map_yaml" doc="filepath to previously captured map (required)" />

  <!-- GRIPPER CAMERA -->
  <arg name="gripper_camera" default="true"/>
  <group if="$(arg gripper_camera)">
    <include file="$(find stretch_teleop_interface)/launch/gripper_camera.launch"></include>
  </group>
  <group unless="$(arg gripper_camera)">
      <node pkg="image_publisher" type="image_publisher" name="gripper_camera"
        args="$(find stretch_teleop_interface)/nodes/blank_image.png" >
        <param name="frame_id" value="gripper_camera" />
        <param name="publish_rate" value="1" />
      </node>
  </group>
  <!-- -->

  <!-- NAVIGATION CAMERA -->
  <arg name="navigation_camera" default="true"/>
  <group if="$(arg navigation_camera)">
    <include file="$(find stretch_teleop_interface)/launch/navigation_camera.launch"></include>
  </group>
  <group unless="$(arg navigation_camera)">
      <node pkg="image_publisher" type="image_publisher" name="navigation_camera"
        args="$(find stretch_teleop_interface)/nodes/blank_image.png" >
        <param name="frame_id" value="navigation_camera" />
        <param name="publish_rate" value="10" />
      </node>
  </group>
  <!-- -->
  
  <!-- STRETCH DRIVER -->
  <param name="/stretch_driver/broadcast_odom_tf" type="bool" value="true"/>
  <include file="$(find stretch_core)/launch/stretch_driver.launch"></include>
  <!-- -->

  <!-- ROSBRIDGE -->
  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
    <arg name="port" default="9090"/>
    <arg name="address" default="localhost" />
    <arg name="ssl" value="true" />
    <arg name="certfile" value="$(find stretch_teleop_interface)/certificates/$(arg certfile)" />
    <arg name="keyfile" value="$(find stretch_teleop_interface)/certificates/$(arg keyfile)" />
    <arg name="authenticate" default="false" />
  </include>
  <!-- -->

  <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher" respawn="false" output="screen"/>

  <node name="configure_video_streams" pkg="stretch_teleop_interface" type="configure_video_streams" args="$(arg params)" output="screen"/>

  <!-- MAP SERVER -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_yaml)" />
  <!-- -->

  <!-- CENTERED BASE LINK -->
  <node name="centered_base_link_tf_publisher" pkg="tf" type="static_transform_publisher" args="-0.1 0 0 0 0 0 1 /base_link /centered_base_link 100" />
  <!-- -->

  <!-- LASER RANGE FINDER -->
  <include file="$(find stretch_core)/launch/rplidar.launch" />
  <!-- -->

  <!-- LOCALIZATION -->
  <include file="$(find amcl)/examples/amcl_diff.launch" />
  
  <!-- NAVIGATION -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find stretch_navigation)/config/common_costmap_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find stretch_navigation)/config/common_costmap_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find stretch_navigation)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find stretch_navigation)/config/global_costmap_params_withmap.yaml" command="load" />
    <rosparam file="$(find stretch_navigation)/config/base_local_planner_params.yaml" command="load" />
    <remap from="/cmd_vel" to="/stretch/cmd_vel" />
  </node>  
  <!-- -->

</launch>